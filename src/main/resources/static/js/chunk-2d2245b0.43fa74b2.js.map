{"version":3,"sources":["webpack:///./src/views/demo/plugins/mock/mixins/regexp.js"],"names":["data","regexp","title","code","json","mocked","methods","regexpMock","JSON","stringify","Mock","mock"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACe;AACbA,MADa,kBACL;AACN,WAAO;AACL;AACAC,YAAM,EAAE;AACNC,aAAK,EAAE,OADD;AAENC,YAAI,yFAFE;AAONC,YAAI,EAAE;AACJ,qBAAW,iBADP;AAEJ,qBAAW,cAFP;AAGJ,qBAAW;AAHP,SAPA;AAYNC,cAAM,EAAE;AAZF;AAFH,KAAP;AAiBD,GAnBY;AAoBbC,SAAO,EAAE;AACPC,cADO,wBACO;AACZ,WAAKN,MAAL,CAAYI,MAAZ,GAAqBG,IAAI,CAACC,SAAL,CAAeC,6CAAI,CAACC,IAAL,CAAU,KAAKV,MAAL,CAAYG,IAAtB,CAAf,EAA4C,IAA5C,EAAkD,CAAlD,CAArB;AACD;AAHM;AApBI,CAAf,E","file":"js/chunk-2d2245b0.43fa74b2.js","sourcesContent":["/* eslint-disable */\nimport Mock from 'mockjs'\nexport default {\n  data () {\n    return {\n      // 测试正则表达式\n      regexp: {\n        title: '正则表达式',\n        code: `{\n  'regexp1': /[a-z][A-Z][0-9]/,\n  'regexp2': /\\w\\W\\s\\S\\d\\D/,\n  'regexp3': /\\d{5,10}/\n}`,\n        json: {\n          'regexp1': /[a-z][A-Z][0-9]/,\n          'regexp2': /\\w\\W\\s\\S\\d\\D/,\n          'regexp3': /\\d{5,10}/\n        },\n        mocked: ''\n      }\n    }\n  },\n  methods: {\n    regexpMock () {\n      this.regexp.mocked = JSON.stringify(Mock.mock(this.regexp.json), null, 2)\n    }\n  }\n}\n"],"sourceRoot":""}