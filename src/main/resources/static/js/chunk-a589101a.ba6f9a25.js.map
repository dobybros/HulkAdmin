{"version":3,"sources":["webpack:///./src/api/deploy.api.js","webpack:///./src/views/hulk/deployserviceversion/index.vue?b7d9","webpack:///src/views/hulk/deployserviceversion/index.vue","webpack:///./src/views/hulk/deployserviceversion/index.vue?ed0e","webpack:///./src/views/hulk/deployserviceversion/index.vue?e24b","webpack:///./src/views/hulk/deployserviceversion/index.vue?9e3e","webpack:///./src/views/hulk/deployserviceversion/index.vue"],"names":["GetAllServerConfigs","searchInput","request","url","method","GetServiceConfigs","service","version","GetServiceConfigsByType","SaveConfig","data","SaveWithLastConfig","RemoveConfig","id","CheckServiceConfig","RepairConfig","GetAllGroovyInfo","DeleteServiceVersion","RemoveService","GetAllServiceVersions","GetDeployServiceVersion","AddDeployService","serviceName","RemoveDeployService","RepairDployServiceVersions","SaveServiceVersion","RemoveServiceVersion","GetDeployRecords","GetThisServiceVersions","GetThisBaseJars","GetDeployServers","GetAllServerWebs","ReloadNginx","GetServerVersions","GetWebVersions","nginxName","webName","projectName","GetAllContainer","ReloadContainer","GetServerIps","UploadAllJars","DeleteContainer","server","GetAllNginx","GetWebsByNginx","DownloadAllGroovy","directoryStr","DeleteWebProjectVersion","GetGroovyCloud","GetGroovyCloudData","DeleteGwsUser","userId","GetKibanaUrl","GetAllGCRepairs","GCRepair","RepairBaseJars","GetBaseJars","GetTransactions","GetTransactionInfos","transactionType","status","loadSize","skip","size","startTime","endTime","stage","tid","RetryTransaction","ids"],"mappings":"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BAxCA,0BAwCA;AACA;AACA;AACA;AACA,KA5CA;AA6CA,UA7CA,oBA6CA;AAAA;;AACA;AACA;AACA,+EACA,IADA,CACA;AACA;AACA,OAHA,EAIA,KAJA,CAIA;AACA;AACA,OANA;AAOA,KAvDA;AAwDA,mBAxDA,6BAwDA;AACA;AACA;AACA,KA3DA;AA4DA,kBA5DA,4BA4DA;AACA;AACA;AACA,KA/DA;AAgEA,gBAhEA,0BAgEA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA,KAvEA;AAwEA,iBAxEA,yBAwEA,GAxEA,EAwEA,IAxEA,EAwEA,QAxEA,EAwEA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,kCACA;AACA;AACA,KAvFA;AAyFA,uBAzFA,+BAyFA,IAzFA,EAyFA;AAAA;;AACA,mGACA,IADA,CACA;AACA;;AACA;AACA,OAJA,EAKA,KALA,CAKA;AACA;AACA,OAPA;AAQA,KAlGA;AAmGA,cAnGA,wBAmGA;AAAA;;AACA;AACA;AACA,OAFA,MAEA;AACA,yGACA,IADA,CACA;AACA;;AACA;AACA;AACA,SALA,EAMA,KANA,CAMA;AACA;AACA,SARA;AASA;AACA,KAjHA;AAkHA,wBAlHA,kCAkHA;AAAA;;AACA,iEACA,IADA,CACA;AACA;;AACA;AACA,OAJA,EAKA,KALA,CAKA;AACA;AACA,OAPA;AAQA,KA3HA;AA4HA,kBA5HA,4BA4HA;AAAA;;AACA,qDACA,IADA,CACA;AACA;AACA,OAHA,EAIA,KAJA,CAIA;AACA;AACA,OANA;AAOA,KApIA;AAqIA,QArIA,kBAqIA;AACA;AACA;;AACA;AACA;AACA;;AACA,kBANA,CAMA;;AACA,qDAPA,CAOA;;AACA;AACA;AACA,KA/IA;AAgJA,gBAhJA,0BAgJA;AACA;AACA;AACA;AACA,KApJA;AAqJA,kCArJA,0CAqJA,KArJA,EAqJA,IArJA,EAqJA;AACA;AACA;AACA;AACA,KAzJA;AA0JA,cA1JA,wBA0JA;AAAA;;AACA;AACA,gFACA,IADA,CACA;AACA;;AACA;AACA;AACA;AACA,OANA,EAOA,KAPA,CAOA;AACA;AACA,OATA;AAUA;AACA;AACA;AAxKA,GADA;AA2KA,MA3KA,kBA2KA;AACA;AACA,wCADA;AAEA,wCAFA;AAGA,4BAHA;AAIA,mBAJA;AAKA,mBALA;AAMA,qCANA;AAOA,kCAPA;AAQA,oBARA;AASA,cATA;AAUA,0BAVA;AAWA,qBAXA;AAYA,iCAZA;AAaA,wBAbA;AAcA,wBAdA;AAeA,0CAfA;AAgBA,iBAhBA;AAiBA,kCAjBA;AAkBA,gCAlBA;AAmBA,wBAnBA;AAoBA,kBApBA;AAqBA,iCArBA;AAsBA,wBAtBA;AAuBA,kBAvBA;AAwBA;AAxBA;AA0BA,GAtMA;AAuMA,SAvMA,qBAuMA;AAAA;;AACA,0DACA,IADA,CACA;AACA;;AACA;AACA;;AACA;AACA;AACA,OAFA,MAEA,EAEA;;AACA;AACA,KAXA,EAYA,KAZA,CAYA;AACA;AACA,KAdA;AAeA,GAvNA;AAwNA;AACA;AACA;;AACA;AACA;AACA,OAFA,MAEA,EAEA;;AACA;AACA;AACA;AAVA;AAxNA,G;;ACnNma,CAAgB,kIAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC0bxa;AACf;AACA,CAAC;;;AC5bwV,CAAgB,gMAAG,EAAC,C;;ACAzR;AAC3B;AACL;;;AAGpD;AACgG;AAChG,gBAAgB,8CAAU;AAC1B,EAAE,iDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACwF;AACxF,WAAW,gFAAM,iBAAiB,gFAAM;;AAEzB,2G","file":"js/chunk-a589101a.ba6f9a25.js","sourcesContent":["import request from '@/plugin/axios'\nimport util from \"@/libs/util\";\n\nexport function GetAllServerConfigs(searchInput) {\n    return request({\n        url: '/deploy/serverconfig?s=' + searchInput,\n        method: 'get'\n    })\n}\n\nexport function GetServiceConfigs(service, version) {\n    return request({\n        url: '/deploy/serviceconfig/' + service + '/' + version,\n        method: 'get'\n    })\n}\n\nexport function GetServiceConfigsByType() {\n    return request({\n        url: '/deploy/configs/type',\n        method: 'get'\n    })\n}\n\nexport function SaveConfig(data) {\n    return request({\n        url: '/deploy/serverconfig',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function SaveWithLastConfig(data) {\n    return request({\n        url: '/deploy/serverconfig/withlast',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function RemoveConfig(id) {\n    return request({\n        url: '/deploy/serverconfig/' + id,\n        method: 'delete'\n    })\n}\n\nexport function CheckServiceConfig(service, version) {\n    return request({\n        url: '/deploy/serviceconfig/healthy?s=' + service + '&v=' + version,\n        method: 'get'\n    })\n}\n\nexport function RepairConfig() {\n    return request({\n        url: '/deploy/repairconfig',\n        method: 'get'\n    })\n}\n\nexport function GetAllGroovyInfo(searchInput) {\n    return request({\n        url: '/deploy/groovyzips?s=' + searchInput,\n        method: 'get'\n    })\n}\n\nexport function DeleteServiceVersion(service, version) {\n    return request({\n        url: '/deploy/groovyzip?s=' + service + '&v=' + version,\n        method: 'delete'\n    })\n}\n\nexport function RemoveService(service) {\n    return request({\n        url: '/deploy/groovyzips?s=' + service,\n        method: 'delete'\n    })\n}\n\nexport function GetAllServiceVersions() {\n    return request({\n        url: '/deploy/deployserviceversions',\n        method: 'get'\n    })\n}\nexport function GetDeployServiceVersion(id) {\n    return request({\n        url: '/deploy/deployserviceversions/services/' + id,\n        method: 'get'\n    })\n}\nexport function AddDeployService(id, serviceName) {\n    return request({\n        url: '/deploy/deployserviceversions/services/' + id + \"/service/\" + serviceName,\n        method: 'post'\n    })\n}\nexport function RemoveDeployService(id, serviceName) {\n    return request({\n        url: '/deploy/deployserviceversions/services/' + id + \"/service/\" + serviceName,\n        method: 'delete'\n    })\n}\nexport function RepairDployServiceVersions() {\n    return request({\n        url: '/deploy/repairdeployserviceversion',\n        method: 'get'\n    })\n}\n\nexport function SaveServiceVersion(data) {\n    return request({\n        url: '/deploy/serviceversion',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function RemoveServiceVersion(id) {\n    return request({\n        url: '/deploy/deployserviceversion?i=' + id,\n        method: 'delete'\n    })\n}\nexport function GetDeployRecords(searchInput) {\n    return request({\n        url: '/deploy/deployrecords?s=' + searchInput,\n        method: 'get'\n    })\n}\nexport function GetThisServiceVersions(id) {\n    return request({\n        url: '/deploy/thisserviceversions/' + id,\n        method: 'get'\n    })\n}\nexport function GetThisBaseJars(id) {\n    return request({\n        url: '/deploy/newbaseJars/' + id,\n        method: 'get'\n    })\n}\nexport function GetDeployServers(id) {\n    return request({\n        url: '/deploy/deployserver/' + id,\n        method: 'get'\n    })\n}\n\nexport function GetAllServerWebs(data) {\n    return request({\n        url: '/deploy/serverweb/' + data,\n        method: 'get'\n    })\n}\n\nexport function ReloadNginx(data) {\n    return request({\n        url: '/deploy/serverweb',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function GetServerVersions(data) {\n    return request({\n        url: '/deploy/serverweb/server/' + data,\n        method: 'get'\n    })\n}\n\nexport function GetWebVersions(nginxName, webName, projectName) {\n    return request({\n        url: '/deploy/serverweb/web/' + nginxName + '/' + webName + '/' + projectName,\n        method: 'get'\n    })\n}\n\nexport function GetAllContainer() {\n    return request({\n        url: '/deploy/containers',\n        method: 'get'\n    })\n}\n\nexport function ReloadContainer(id) {\n    return request({\n        url: '/deploy/container/' + id,\n        method: 'get'\n    })\n}\n\nexport function GetServerIps() {\n    return request({\n        url: '/deploy/container/serverips',\n        method: 'get'\n    })\n}\n\nexport function UploadAllJars() {\n    return request({\n        url: '/open/allbasejars',\n        method: 'post'\n    })\n}\n\nexport function DeleteContainer(server) {\n    return request({\n        url: '/deploy/container/' + server,\n        method: 'delete'\n    })\n}\n\nexport function GetAllNginx() {\n    return request({\n        url: '/deploy/allnginx',\n        method: 'get'\n    })\n}\n\nexport function GetWebsByNginx(data) {\n    return request({\n        url: '/deploy/webs/' + data,\n        method: 'get'\n    })\n}\n\nexport function DownloadAllGroovy(directoryStr) {\n    return request({\n        url: '/deploy/downloadgroovys',\n        method: 'post',\n        data: directoryStr\n    })\n}\n\nexport function DeleteWebProjectVersion(nginxName, webName, projectName, version) {\n    return request({\n        url: '/deploy/web/' + nginxName + '/' + webName + '/' + projectName + '/' + version,\n        method: 'delete'\n    })\n}\n\nexport function GetGroovyCloud() {\n    return request({\n        url: '/gc/init',\n        method: 'get'\n    })\n}\n\nexport function GetGroovyCloudData(data) {\n    return request({\n        url: '/gc/data',\n        method: 'post',\n        data: data\n    })\n}\n\nexport function DeleteGwsUser(data, userId) {\n    return request({\n        url: '/gc/gws/delete/' + userId,\n        method: 'post',\n        data: data\n    })\n}\n\nexport function GetKibanaUrl() {\n    return request({\n        url: '/log/page',\n        method: 'get'\n    })\n}\n\nexport function GetAllGCRepairs() {\n    return request({\n        url: '/repair/all',\n        method: 'get'\n    })\n}\n\nexport function GCRepair(id) {\n    return request({\n        url: '/repair/' + id,\n        method: 'post'\n    })\n}\nexport function RepairBaseJars() {\n    return request({\n        url: '/deploy/repairbaseJars',\n        method: 'get'\n    })\n}\nexport function GetBaseJars(id) {\n    return request({\n        url: '/deploy/baseJars/' + id,\n        method: 'get'\n    })\n}\n\nexport function GetTransactions() {\n    return request({\n        url: '/dts/transactions',\n        method: 'get'\n    })\n}\n\nexport function GetTransactionInfos(transactionType, status = [0,1,2], loadSize = '', skip = 0, size = 10, startTime = '', endTime = '', stage = '', tid = '') {\n    return request({\n        url: `/dts/transactioninfos?transactiontype=${transactionType}&status=${status}&loadSize=${loadSize}&skip=${skip}&size=${size}&startTime=${startTime}&endTime=${endTime}&stage=${stage}&tid=${tid}`,\n        method: 'get'\n    })\n}\nexport function RetryTransaction(transactionType, ids = []) {\n    return request({\n        url: `/dts/transaction/${transactionType}/retry`,\n        method: 'post',\n        data: ids\n    })\n}\n\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-container',[_c('el-main',[_c('el-table',{staticStyle:{\"width\":\"90%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"height\":\"700px\"}},[_c('el-table-column',{attrs:{\"prop\":\"serverType\",\"label\":\"ServerType\",\"width\":\"250\"}}),_c('el-table-column',{attrs:{\"prop\":\"groovyCloudType\",\"label\":\"GroovyCloudType\",\"width\":\"250\"}}),_c('el-table-column',{attrs:{\"prop\":\"serviceLength\",\"label\":\"Number of services\",\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"label\":\"Operations\",\"width\":\"400\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{staticStyle:{\"margin-right\":\"40px\"},attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":function($event){return _vm.openServiceVersionDialog(scope.row)}}},[_vm._v(\"\\n                            \"+_vm._s(_vm.$t(\"views.deploy.serviceVersion\"))+\"\\n                        \")]),_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"medium\"},on:{\"click\":function($event){return _vm.openReloadServerTypeDialog(scope.row)}}},[_vm._v(\"\\n                            \"+_vm._s(_vm.$t(\"views.deploy.reload\"))+\"\\n                        \")])]}}])})],1)],1),_c('el-dialog',{attrs:{\"width\":\"60%\",\"visible\":_vm.serviceVersionDialogVisible,\"title\":this.remindServerTypeService},on:{\"update:visible\":function($event){_vm.serviceVersionDialogVisible=$event}}},[_c('el-col',{staticStyle:{\"margin-bottom\":\"5px\"},attrs:{\"span\":8}},[_c('el-input',{attrs:{\"placeholder\":\"Input service name\"},model:{value:(_vm.addServiceName),callback:function ($$v) {_vm.addServiceName=$$v},expression:\"addServiceName\"}})],1),_c('el-col',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"span\":5}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":function($event){return _vm.addService()}}},[_vm._v(\"add\")])],1),_c('el-table',{attrs:{\"data\":_vm.serviceData.serviceVersions,\"border\":\"\",\"height\":\"700px\"}},[_c('el-table-column',{attrs:{\"prop\":\"service\",\"label\":\"serviceName\"}}),_c('el-table-column',{attrs:{\"prop\":\"version\",\"label\":\"version\"}}),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"Operations\",\"width\":\"150px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"medium\"},on:{\"click\":function($event){return _vm.removeDeployService(scope.row)}}},[_vm._v(\"\\n                            \"+_vm._s(_vm.$t(\"views.deploy.delete\"))+\"\\n                        \")])]}}])})],1)],1),_c('el-dialog',{attrs:{\"title\":_vm.$t('views.deploy.reminder'),\"visible\":_vm.deleteServiceVersionVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.deleteServiceVersionVisible=$event}}},[_c('span',[_vm._v(_vm._s(this.remindRemoveDeployServiceVersion))]),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelDelete}},[_vm._v(_vm._s(_vm.$t(\"views.deploy.cancel\")))]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.sureDelete}},[_vm._v(_vm._s(_vm.$t(\"views.deploy.sure\")))])],1)]),_c('el-dialog',{attrs:{\"title\":_vm.$t('views.deploy.reminder'),\"visible\":_vm.reloadContainerDialog,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.reloadContainerDialog=$event}}},[_c('span',[_vm._v(_vm._s(this.remindReloadServerType))]),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelReload}},[_vm._v(_vm._s(_vm.$t(\"views.deploy.cancel\")))]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.reload}},[_vm._v(_vm._s(_vm.$t(\"views.deploy.sure\")))])],1)]),_c('el-dialog',{attrs:{\"visible\":_vm.addbaseJars,\"title\":\"Upload Jars\",\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addbaseJars=$event}}},[_c('span',{staticClass:\"uploader\"},[_c('el-upload',{ref:\"upload\",staticClass:\"upload-demo\",attrs:{\"accept\":\".jar\",\"action\":_vm.uploadUrlData,\"file-list\":_vm.fileList,\"on-success\":_vm.uploadSuccess,\"auto-upload\":false}},[_c('el-button',{attrs:{\"slot\":\"trigger\",\"size\":\"medium\",\"type\":\"primary\"},slot:\"trigger\"},[_vm._v(_vm._s(_vm.$t(\"views.deploy.selectFile\")))]),_c('el-button',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"size\":\"medium\",\"type\":\"success\"},on:{\"click\":_vm.submitUpload}},[_vm._v(_vm._s(_vm.$t(\"views.deploy.upload\")))]),_c('el-button',{staticStyle:{\"margin-left\":\"200px\"},attrs:{\"size\":\"medium\"},on:{\"click\":_vm.cancelbaseJars}},[_vm._v(_vm._s(_vm.$t(\"views.deploy.cancel\")))])],1)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <el-container>\n        <el-main>\n<!--            <el-row style=\"display: flex\">-->\n<!--&lt;!&ndash;                <el-button type=\"primary\" round @click=\"newServiceVersion\" style=\"margin-right: 10px\">{{$t(\"views.deploy.newServiceVersion\")}}&ndash;&gt;-->\n<!--&lt;!&ndash;                </el-button>&ndash;&gt;-->\n\n<!--                <div style=\"display: flex;-->\n<!--    width: 100%;\">-->\n<!--                    <el-button type=\"primary\" round @click=\"sureAddbaseJars\">{{$t(\"views.deploy.AddBaseJars\")}}-->\n<!--                    </el-button>-->\n<!--                    <div style=\"width: calc(90% - 191px);-->\n<!--    display: flex;-->\n<!--    align-items: center;-->\n<!--    justify-content: flex-end;\">-->\n<!--                        <el-input v-model=\"jarinput\" style=\"width: 500px\" placeholder=\"Input jarName\"></el-input>-->\n<!--                        <a style=\"color: #0000cc;border-color: #000fff\" target=\"_blank\"-->\n<!--                           :href=\"downloadJarUrl + '/open/downjars?i=' + jarinput\">-->\n<!--                            <el-button type=\"success\">{{$t(\"views.deploy.downloadAllBaseJars\")}}</el-button>-->\n<!--                        </a>-->\n<!--                        <el-upload-->\n<!--                                accept=\".zip\"-->\n<!--                                ref=\"upload\"-->\n<!--                                :action=\"uploadBaseJars(1)\"-->\n<!--                                :on-success=\"uploadJarSuccess\"-->\n<!--                                :file-list=\"baseJarList\"-->\n<!--                                :limit=\"1\"-->\n<!--                                :auto-upload=\"true\"-->\n<!--                                style=\"margin-left: 10px\">-->\n<!--                            <el-button type=\"primary\">{{$t(\"views.deploy.UploadBaseJars\")}}<i-->\n<!--                                    class=\"el-icon-upload el-icon&#45;&#45;right\"></i></el-button>-->\n<!--                        </el-upload>-->\n<!--                    </div>-->\n<!--                </div>-->\n<!--            </el-row>-->\n            <el-table\n                    :data=\"tableData\"\n                    border\n                    style=\"width: 90%\"\n                    height=\"700px\">\n                <el-table-column\n                        prop=\"serverType\"\n                        label=\"ServerType\"\n                        width=\"250\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"groovyCloudType\"\n                        label=\"GroovyCloudType\"\n                        width=\"250\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"serviceLength\"\n                        label=\"Number of services\"\n                        width=\"200\">\n                </el-table-column>\n<!--                <el-table-column-->\n<!--                        prop=\"baseJarLength\"-->\n<!--                        label=\"Number of baseJars\"-->\n<!--                        width=\"200\">-->\n<!--                </el-table-column>-->\n                <el-table-column\n                        label=\"Operations\"\n                        width=\"400\">\n                    <template slot-scope=\"scope\">\n                        <el-button type=\"primary\" size=\"medium\" style=\"margin-right: 40px\"\n                                   @click=\"openServiceVersionDialog(scope.row)\">\n                            {{$t(\"views.deploy.serviceVersion\")}}\n                        </el-button>\n                        <el-button type=\"success\" size=\"medium\" @click=\"openReloadServerTypeDialog(scope.row)\">\n                            {{$t(\"views.deploy.reload\")}}\n                        </el-button>\n<!--                        <el-button type=\"primary\" size=\"medium\" style=\"margin-right: 5px\"-->\n<!--                                   @click=\"openBaseJarsDialog(scope.row)\">-->\n<!--                            {{$t(\"views.deploy.baseJars\")}}-->\n<!--                        </el-button>-->\n                        <!--                        <el-button-->\n                        <!--                                @click.native.prevent=\"openDeleteServiceVersionDialog(scope.$index, scope.row)\"-->\n                        <!--                                type=\"danger\"-->\n                        <!--                                size=\"medium\">-->\n                        <!--                            {{$t(\"views.deploy.delete\")}}-->\n                        <!--                        </el-button>-->\n                    </template>\n                </el-table-column>\n<!--                <el-table-column-->\n<!--                        fixed=\"right\"-->\n<!--                        label=\"Operations\"-->\n<!--                        width=\"200\">-->\n<!--                    <template slot-scope=\"scope\">-->\n<!--                        <el-button type=\"primary\" size=\"medium\" @click=\"openReloadServerTypeDialog(scope.row)\">-->\n<!--                            {{$t(\"views.deploy.reload\")}}-->\n<!--                        </el-button>-->\n<!--                    </template>-->\n<!--                </el-table-column>-->\n            </el-table>\n        </el-main>\n        <el-dialog width=\"60%\" :visible.sync=\"serviceVersionDialogVisible\" :title=\"this.remindServerTypeService\">\n            <el-col :span=\"8\" style=\"margin-bottom: 5px\">\n                <el-input v-model=\"addServiceName\" placeholder=\"Input service name\">\n                </el-input>\n            </el-col>\n            <el-col :span=\"5\" style=\"margin-left: 5px\">\n                <el-button type=\"primary\" size=\"medium\" @click=\"addService()\">add</el-button>\n            </el-col>\n            <el-table\n                    :data=\"serviceData.serviceVersions\"\n                    border\n                    height=\"700px\">\n                <el-table-column\n                        prop=\"service\"\n                        label=\"serviceName\">\n                </el-table-column>\n                <el-table-column\n                        prop=\"version\"\n                        label=\"version\">\n                </el-table-column>\n                <el-table-column\n                        fixed=\"right\"\n                        label=\"Operations\"\n                        width=\"150px\">\n                    <template slot-scope=\"scope\">\n                        <el-button\n                                type=\"danger\"\n                                size=\"medium\"\n                                @click=\"removeDeployService(scope.row)\">\n                            {{$t(\"views.deploy.delete\")}}\n                        </el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </el-dialog>\n<!--        <el-dialog width=\"60%\" :visible.sync=\"baseJarsVisible\" :title=\"this.remindBaseJars\">-->\n<!--            <el-table-->\n<!--                    :data=\"basePro.baseJarVersions\"-->\n<!--                    border-->\n<!--                    height=\"600px\">-->\n<!--                <el-table-column-->\n<!--                        prop=\"jarName\"-->\n<!--                        label=\"jarName\">-->\n<!--                </el-table-column>-->\n<!--                <el-table-column-->\n<!--                        prop=\"version\"-->\n<!--                        label=\"version\">-->\n<!--                </el-table-column>-->\n<!--            </el-table>-->\n<!--            <el-divider></el-divider>-->\n<!--            <el-table-->\n<!--                    :data=\"basePro.servers\"-->\n<!--                    border-->\n<!--                    height=\"200px\">-->\n<!--                <el-table-column-->\n<!--                        prop=\"ip\"-->\n<!--                        label=\"ip\">-->\n<!--                </el-table-column>-->\n<!--                <el-table-column-->\n<!--                        prop=\"dockerNames\"-->\n<!--                        label=\"dockerNames\">-->\n<!--                </el-table-column>-->\n<!--            </el-table>-->\n<!--        </el-dialog>-->\n\n        <el-dialog\n                :title=\"$t('views.deploy.reminder')\"\n                :visible.sync=\"deleteServiceVersionVisible\"\n                width=\"30%\">\n            <span>{{this.remindRemoveDeployServiceVersion}}</span>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"cancelDelete\">{{$t(\"views.deploy.cancel\")}}</el-button>\n                <el-button type=\"primary\" @click=\"sureDelete\">{{$t(\"views.deploy.sure\")}}</el-button>\n             </span>\n        </el-dialog>\n        <el-dialog\n                :title=\"$t('views.deploy.reminder')\"\n                :visible.sync=\"reloadContainerDialog\"\n                width=\"30%\">\n            <span>{{this.remindReloadServerType}}</span>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"cancelReload\">{{$t(\"views.deploy.cancel\")}}</el-button>\n                <el-button type=\"primary\" @click=\"reload\">{{$t(\"views.deploy.sure\")}}</el-button>\n             </span>\n        </el-dialog>\n        <el-dialog\n                :visible.sync=\"addbaseJars\"\n                title=\"Upload Jars\"\n                width=\"50%\"\n        >\n            <span class=\"uploader\">\n                    <el-upload\n                            accept=\".jar\"\n                            class=\"upload-demo\"\n                            ref=\"upload\"\n                            :action=\"uploadUrlData\"\n                            :file-list=\"fileList\"\n                            :on-success=\"uploadSuccess\"\n                            :auto-upload=\"false\">\n                <el-button slot=\"trigger\" size=\"medium\" type=\"primary\">{{$t(\"views.deploy.selectFile\")}}</el-button>\n                <el-button style=\"margin-left: 10px;\" size=\"medium\" type=\"success\"\n                           @click=\"submitUpload\">{{$t(\"views.deploy.upload\")}}</el-button>\n                        <el-button style=\"margin-left: 200px\" size=\"medium\" @click=\"cancelbaseJars\">{{$t(\"views.deploy.cancel\")}}</el-button>\n                    </el-upload>\n                </span>\n        </el-dialog>\n    </el-container>\n</template>\n\n<script>\n    import {\n        GetAllServiceVersions, SaveServiceVersion, RemoveServiceVersion, RepairBaseJars,\n        RepairDployServiceVersions, GetDeployServiceVersion, AddDeployService, RemoveDeployService,\n        GetBaseJars, ReloadContainer\n    } from \"@api/deploy.api\";\n\n    export default {\n        methods: {\n            openServiceVersionDialog(data) {\n                GetDeployServiceVersion(data.serverType)\n                    .then(resp => {\n                        this.$message.success(\"Get \" + data.serverType + \"'s serviceversions success!\")\n                        this.serviceData = resp\n                        this.remindServerTypeService = this.serviceData.serverType + \"'s service and version\"\n                        this.serviceVersionDialogVisible = true\n                    })\n                    .catch(err => {\n                        this.$message.error(err);\n                    })\n            },\n            openBaseJarsDialog(data) {\n                GetBaseJars(data.serverType)\n                    .then(resp => {\n                        this.basePro = resp\n                        this.remindBaseJars = this.basePro.serverType + \"'s base jars and server\"\n                        this.baseJarsVisible = true\n                    })\n                    .catch(err => {\n                        this.$message.error(err);\n                    })\n            },\n            uploadBaseJars() {\n                return this.downloadJarUrl + \"/open/basejarszip\"\n            },\n            uploadJarSuccess(res, file, fileList) {\n                if (res.code === 1) {\n                    this.$message.success(\"File \" + file.name + \" Upload Success!\")\n                } else {\n                    this.$message.error(\"File \" + file.name + \"Upload Failed! errMsg: \" + res.message)\n                }\n                this.baseJarList = []\n            },\n            openReloadServerTypeDialog(data) {\n                this.remindReloadServerType = \"Confirm reload container \" + data.serverType + \"?\"\n                this.reloadContainerDialog = true\n                this.everyData = data\n            },\n            cancelReload() {\n                this.remindReloadServerType = \"\"\n                this.reloadContainerDialog = false\n                this.everyData = {}\n            },\n            reload() {\n                this.remindReloadServerType = \"\"\n                this.reloadContainerDialog = false\n                ReloadContainer(this.everyData.serverType)\n                    .then(resp => {\n                        this.$message.success(\"Reload request send success\")\n                    })\n                    .catch(err => {\n                        this.$message.error(err);\n                    })\n            },\n            sureAddbaseJars() {\n                this.fileList = []\n                this.addbaseJars = true\n            },\n            cancelbaseJars() {\n                this.addbaseJars = false\n                this.fileList = []\n            },\n            submitUpload() {\n                if (this.$refs.upload.uploadFiles.length > 0) {\n                    this.$refs.upload.submit();\n                    this.addbaseJars = false\n                } else {\n                    this.$message.error('Please select a jar file to upload!');\n                }\n            },\n            uploadSuccess(res, file, fileList) {\n                if (res.code === 1) {\n                    this.$message.success(\"Files \" + file.name + \" Upload Success!\")\n                } else {\n                    this.$message.error(\"Files \" + file.name + \"Upload Failed!\")\n                }\n                for (let i = 0; i < fileList.length; i++) {\n                    if (fileList[i].name === file.name) {\n                        fileList.splice(i, 1)\n                        break\n                    }\n                }\n                if (fileList.length === 0) {\n                    // this.$message.success(\"Upload all jars Success!\")\n                }\n            },\n\n            removeDeployService(data) {\n                RemoveDeployService(this.serviceData.serverType, data.service)\n                    .then(resp => {\n                        this.$message.success(\"Remove \" + data.service + \" success!\")\n                        this.serviceData = resp\n                    })\n                    .catch(err => {\n                        this.$message.error(err);\n                    })\n            },\n            addService() {\n                if (this.addServiceName === undefined || this.addServiceName === \"\") {\n                    this.$message.error(\"Please input serviceName\");\n                } else {\n                    AddDeployService(this.serviceData.serverType, this.addServiceName)\n                        .then(resp => {\n                            this.$message.success(\"Add \" + this.addServiceName + \"to \" + this.serviceData.serverType + \" success!\")\n                            this.addServiceName = \"\"\n                            this.serviceData = resp\n                        })\n                        .catch(err => {\n                            this.$message.error(err);\n                        })\n                }\n            },\n            repairServiceVersion() {\n                RepairDployServiceVersions()\n                    .then(resp => {\n                        this.$message.success(\"Repair service version success!\")\n                        this.tableData = resp\n                    })\n                    .catch(err => {\n                        this.$message.error(err);\n                    })\n            },\n            repairBaseJars() {\n                RepairBaseJars()\n                    .then(resp => {\n                        this.$message.success(\"Repair baseJar success!\")\n                    })\n                    .catch(err => {\n                        this.$message.error(err);\n                    })\n            },\n            uuid() {\n                var s = [];\n                var hexDigits = \"0123456789abcdef\";\n                for (var i = 0; i < 36; i++) {\n                    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n                }\n                s[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n                s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n                var uuid = s.join(\"\");\n                return uuid\n            },\n            cancelDelete() {\n                this.deleteServiceVersionVisible = false\n                this.serviceVersionId = \"\"\n                this.remindRemoveDeployServiceVersion = \"\"\n            },\n            openDeleteServiceVersionDialog(index, data) {\n                this.deleteServiceVersionVisible = true\n                this.serviceVersionId = data[\"id\"]\n                this.remindRemoveDeployServiceVersion = \"Confirm delete \" + data.serverType + \"'s serviceVersion\"\n            },\n            sureDelete() {\n                this.deleteServiceVersionVisible = false\n                RemoveServiceVersion(this.serviceVersionId)\n                    .then(resp => {\n                        this.$message.success(\"Success!\")\n                        this.tableData = resp\n                        this.remindRemoveDeployServiceVersion = \"\"\n                        this.serviceVersionId = \"\"\n                    })\n                    .catch(err => {\n                        this.$message.error(err);\n                    })\n                this.index = -1\n                this.serviceVersionId = \"\"\n            }\n        },\n        data() {\n            return {\n                serviceVersionDialogVisible: false,\n                deleteServiceVersionVisible: false,\n                baseJarsVisible: false,\n                everyData: {},\n                tableData: [],\n                removeAServiceVersionCanche: [],\n                addAServiceVersionCanche: [],\n                serverType: \"\",\n                type: \"\",\n                serviceVersionId: \"\",\n                serviceData: {},\n                remindServerTypeService: \"\",\n                remindBaseJars: \"\",\n                addServiceName: \"\",\n                remindRemoveDeployServiceVersion: \"\",\n                basePro: {},\n                reloadContainerDialog: false,\n                remindReloadServerType: \"\",\n                addbaseJars: false,\n                fileList: [],\n                uploadUrl: '/open/basejars',\n                downloadJarUrl: '',\n                jarinput: '',\n                baseJarList: []\n            }\n        },\n        created() {\n            GetAllServiceVersions()\n                .then(resp => {\n                    this.$message.success(\"Updated!\")\n                    this.tableData = resp\n                    let uploadHost = ''\n                    if (process.env.VUE_APP_API === \"/\" || process.env.VUE_APP_API === '' || process.env.VUE_APP_API === undefined) {\n                        uploadHost = location.protocol + \"//\" + location.host\n                    } else {\n                        uploadHost = process.env.VUE_APP_API\n                    }\n                    this.downloadJarUrl = uploadHost\n                })\n                .catch(err => {\n                    this.$message.error(err);\n                })\n        },\n        computed: {\n            uploadUrlData: function () {\n                let uploadHost = ''\n                if (process.env.VUE_APP_API === \"/\" || process.env.VUE_APP_API === '' || process.env.VUE_APP_API === undefined) {\n                    uploadHost = location.protocol + \"//\" + location.host\n                } else {\n                    uploadHost = process.env.VUE_APP_API\n                }\n                let param = uploadHost + this.uploadUrl\n                return param\n            }\n        }\n    }\n</script>\n<vue-filename-injector>\nexport default function (Component) {\n  Component.options.__source = \"src/views/hulk/deployserviceversion/index.vue\"\n}\n</vue-filename-injector>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../tools/vue-filename-injector/src/lib/injector.js??ref--0-2!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../tools/vue-filename-injector/src/lib/injector.js??ref--0-2!./index.vue?vue&type=script&lang=js&\"","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default function (Component) {\n  Component.options.__source = \"src/views/hulk/deployserviceversion/index.vue\"\n}\n","import mod from \"-!../../../../tools/vue-filename-injector/src/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../tools/vue-filename-injector/src/lib/injector.js??ref--0-2!./index.vue?vue&type=custom&index=0&blockType=vue-filename-injector\"; export default mod; export * from \"-!../../../../tools/vue-filename-injector/src/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../tools/vue-filename-injector/src/lib/injector.js??ref--0-2!./index.vue?vue&type=custom&index=0&blockType=vue-filename-injector\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=52f40bc5&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./index.vue?vue&type=custom&index=0&blockType=vue-filename-injector\"\nif (typeof block0 === 'function') block0(component)\n\nexport default component.exports"],"sourceRoot":""}